rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }
    
    function isManager() {
      return isAuthenticated() && request.auth.token.role == 'manager';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function canAccessUser(userId) {
      return isOwner(userId) || isAdmin() || isManager();
    }

    function canModifyUser(userId) {
      return isAdmin() || (isManager() && !willChangeRole());
    }

    function willChangeRole() {
      return request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']);
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if canModifyUser(userId);
      allow delete: if isAdmin();

      // User activity subcollection
      match /activity/{activityId} {
        allow read: if canAccessUser(userId);
        allow write: if isAdmin() || isOwner(userId);
      }
    }
    
    // Audit logs collection
    match /audit_logs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }

    // User settings collection
    match /user_settings/{userId} {
      allow read: if canAccessUser(userId);
      allow write: if isOwner(userId) || isAdmin();
    }
  }
} 