name: Create PR from develop to master

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop
      
      - name: Get Git Info
        id: git-info
        run: |
          # Configure git
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
          # Fetch all branches
          git fetch origin master develop
          
          # Get number of changed files
          echo "changes=$(git diff --name-only origin/master...HEAD | grep -v '^$' | wc -l | xargs)" >> "$GITHUB_OUTPUT"
          
          # Get additions and deletions
          STATS=$(git diff --shortstat origin/master...HEAD)
          ADDITIONS=$(echo "$STATS" | grep -o '[0-9]* insertion' | grep -o '[0-9]*' || echo "0")
          DELETIONS=$(echo "$STATS" | grep -o '[0-9]* deletion' | grep -o '[0-9]*' || echo "0")
          echo "additions=$ADDITIONS" >> "$GITHUB_OUTPUT"
          echo "deletions=$DELETIONS" >> "$GITHUB_OUTPUT"
          
          # Get contributors
          echo "contributors=$(git log origin/master..HEAD --format='%aN' | sort -u | paste -sd ',' -)" >> "$GITHUB_OUTPUT"
          
          # Get recent changes
          echo "change_summary<<EOF" >> "$GITHUB_OUTPUT"
          git log --pretty=format:'- %s (%h)' origin/master..HEAD | head -n 5 >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          
          # Get milestones
          echo "milestones<<EOF" >> "$GITHUB_OUTPUT"
          git log --grep='milestone' --pretty=format:'- %s (%h)' origin/master..HEAD >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          
          # Get commit count
          echo "commit_count=$(git rev-list --count origin/master..HEAD)" >> "$GITHUB_OUTPUT"
      
      - name: Read existing statistics
        id: read-stats
        run: |
          # Check if stats file exists
          if [ -f "stats.json" ]; then
            echo "stats=$(cat stats.json)" >> "$GITHUB_OUTPUT"
          else
            echo 'stats={"total_files":0,"total_additions":0,"total_deletions":0,"total_commits":0,"contributors":[]}' >> "$GITHUB_OUTPUT"
          fi

      - name: Update statistics
        id: update-stats
        run: |
          # Parse existing stats
          stats=$(echo '${{ steps.read-stats.outputs.stats }}' | jq -c '.')
          
          # Update stats with current PR data
          # Convert contributors string to array
          contributors_array=$(echo "${{ steps.git-info.outputs.contributors }}" | jq -R 'split(",")')
          
          updated_stats=$(echo "$stats" | jq -c \
            --argjson changes "${{ steps.git-info.outputs.changes }}" \
            --argjson additions "${{ steps.git-info.outputs.additions }}" \
            --argjson deletions "${{ steps.git-info.outputs.deletions }}" \
            --argjson commits "${{ steps.git-info.outputs.commit_count }}" \
            --argjson contributors $contributors_array \
            '.total_files += $changes |
             .total_additions += $additions |
             .total_deletions += $deletions |
             .total_commits += $commits |
             .contributors += $contributors | unique')

          # Save updated stats
          echo "$updated_stats" > stats.json
          echo "updated_stats=$updated_stats" >> "$GITHUB_OUTPUT"

      - name: Create master PR
        uses: repo-sync/pull-request@v2
        if: github.event.pull_request.merged == true
        with:
          github_token: ${{ secrets.PR_AUTH_TOKEN }}
          source_branch: "develop"
          destination_branch: "master"
          pr_title: "develop -> master"
          pr_body: |
            :robot: Automated PR from **develop** to **master**
            
            ### 📊 Current PR Statistics
            - Files changed: ${{ steps.git-info.outputs.changes }}
            - Lines added: ${{ steps.git-info.outputs.additions }}
            - Lines removed: ${{ steps.git-info.outputs.deletions }}
            - Commits: ${{ steps.git-info.outputs.commit_count }}
            - Contributors: ${{ steps.git-info.outputs.contributors }}
            
            ### 📊 Cumulative Statistics
            - Total files changed: $(echo '${{ steps.update-stats.outputs.updated_stats }}' | jq '.total_files')
            - Total lines added: $(echo '${{ steps.update-stats.outputs.updated_stats }}' | jq '.total_additions')
            - Total lines removed: $(echo '${{ steps.update-stats.outputs.updated_stats }}' | jq '.total_deletions')
            - Total commits: $(echo '${{ steps.update-stats.outputs.updated_stats }}' | jq '.total_commits')
            - All contributors: $(echo '${{ steps.update-stats.outputs.updated_stats }}' | jq '.contributors | join(", ")')
            
            ### 📝 Key Changes
            ${{ steps.git-info.outputs.change_summary }}
            
            ### 🎯 Milestones
            ${{ steps.git-info.outputs.milestones }}
            
            ### ⚠️ Important
            - This PR requires manual review and approval
            - Please verify all changes before merging
            - Merge only when all tests pass and code reviews are complete
          pr_label: "auto-pr"